{"pageContext":{"posts":[{"excerpt":"다음과 같이  에 람다에 환경변수를 추가할 수 있다. 아래는 예시. tags    # til,  # cloud,  # aws,  # aws","html":"<p>다음과 같이 <code class=\"language-text\">cloudformation.yaml</code>에 람다에 환경변수를 추가할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">(lambda-function-name)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">...</span>\n  <span class=\"token key atrule\">Properties</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">...</span>\n    <span class=\"token key atrule\">Environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">Variables</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">(environment-variable-key)</span><span class=\"token punctuation\">:</span> (value)\n<span class=\"token punctuation\">...</span></code></pre></div>\n<p>아래는 예시.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">vocaboLambda</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">...</span>\n  <span class=\"token key atrule\">Properties</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">...</span>\n    <span class=\"token key atrule\">Environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">Variables</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">ELASTIC_URL</span><span class=\"token punctuation\">:</span> http<span class=\"token punctuation\">:</span>//localhost<span class=\"token punctuation\">:</span>9200/\n<span class=\"token punctuation\">...</span></code></pre></div>\n<h2 id=\"tags\"><a href=\"#tags\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>tags</h2>\n<p>  #til, #cloud, #aws, #aws</p>","id":"38a804fe-8849-5e0d-a4ff-458f9ef43186","fields":{"slug":"aws-cloudformation-lambda-add-environment-variables"},"frontmatter":{"date":"2019-06-01","title":"aws-cloudformation-lambda-add-environment-variables","category":"TIL","tags":["dev/til","dev/cloud","dev/cloud/aws","dev/cloud/aws"],"banner":"/assets/bg/3.jpg"},"timeToRead":1},{"excerpt":"다음과 같이  에 람다에 환경변수를 추가할 수 있다. 아래는 예시. tags    # til,  # cloud,  # aws,  # aws","html":"<p>다음과 같이 <code class=\"language-text\">cloudformation.yaml</code>에 람다에 환경변수를 추가할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">(lambda-function-name)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">...</span>\n  <span class=\"token key atrule\">Properties</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">...</span>\n    <span class=\"token key atrule\">Environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">Variables</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">(environment-variable-key)</span><span class=\"token punctuation\">:</span> (value)\n<span class=\"token punctuation\">...</span></code></pre></div>\n<p>아래는 예시.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">vocaboLambda</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">...</span>\n  <span class=\"token key atrule\">Properties</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">...</span>\n    <span class=\"token key atrule\">Environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">Variables</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">ELASTIC_URL</span><span class=\"token punctuation\">:</span> http<span class=\"token punctuation\">:</span>//localhost<span class=\"token punctuation\">:</span>9200/\n<span class=\"token punctuation\">...</span></code></pre></div>\n<h2 id=\"tags\"><a href=\"#tags\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>tags</h2>\n<p>  #til, #cloud, #aws, #aws</p>","id":"38a804fe-8849-5e0d-a4ff-458f9ef43186","fields":{"slug":"aws-cloudformation-lambda-add-environment-variables"},"frontmatter":{"date":"2019-06-01","title":"aws-cloudformation-lambda-add-environment-variables","category":"TIL","tags":["dev/til","dev/cloud","dev/cloud/aws","dev/cloud/aws"],"banner":"/assets/bg/3.jpg"},"timeToRead":1},{"excerpt":"aws Lambda로 전환 완료, https 적용 및 react devtools버그 해결(크롬 렌더링 문제). aws Lambda로  에 서버를 올렸는데 에러가 난 이유를 못찾아서 로그를 어디서 찾나 했는데 aws Lambda 다이어그램에서 확인해보니 aws CloudWatch에 기록되고 있었다. 로그를 확인해 보니 app.js 파일 1…","html":"<p>aws Lambda로 전환 완료, https 적용 및 react devtools버그 해결(크롬 렌더링 문제).</p>\n<p>aws Lambda로 <code class=\"language-text\">vocabo-api.epikem.com</code>에 서버를 올렸는데 에러가 난 이유를 못찾아서 로그를 어디서 찾나 했는데 aws Lambda 다이어그램에서 확인해보니 aws CloudWatch에 기록되고 있었다. 로그를 확인해 보니 app.js 파일 15번째 줄에서 컴파일 에러가 났는데, <code class=\"language-text\">new URL(&#39;...&#39;)</code> 부분이었다. 노드에서는 직접 <code class=\"language-text\">url</code> 모듈을 로드하지 않아도 코드가 돌아갔었는데, 람다에서는 로드를 해야하는 것이었다. 다음과 같이 <code class=\"language-text\">url</code>모듈의 <code class=\"language-text\">URL</code>을 로드하여 사용하니 이 부분은 해결되었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">URL</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'url'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>다시 패키지 빌드 및 배포를 시도하니 이번엔 url이 잘못됬다는 에러가 떴는데, 예상한 대로 환경변수 문제였다. <code class=\"language-text\">.env</code>파일 추가로는 람다 패키지 추가가 되지 않았고, 다행히 AWS CloudFormation 공식문서에서 Lambda에 환경변수를 설정하는 방법을 찾아 다음과 같이 채운 다음 다시 배포하니 성공적으로 api 서버가 등록되었다. 드디어 https 및 커스텀 도메인이 적용된 api 서버를 만들었다. 게다가 호출한 만큼만 사용되므로 절약까지 된다. 다만 클라우드 저장소는 결국 샘플에서 수정만 한 것인데, 직접 이런 템플릿을 짜라 하면 도저히 못 할거 같은 느낌이 든다.. (하지만 이건 aws&#x26;cloudformation 쪽이니 모르는게 당연한 것이다)</p>\n<p>file: cloudformation.yaml</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">vocaboLambda</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">...</span>\n  <span class=\"token key atrule\">Properties</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">...</span>\n    <span class=\"token key atrule\">Environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">Variables</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">ELASTIC_URL</span><span class=\"token punctuation\">:</span> (value)\n<span class=\"token punctuation\">...</span></code></pre></div>\n<p>api gateway에서 요청량 제한하니 진짜 제한되는것이 신기하다.</p>\n<p>이상한게, 여전히 프론트가 모바일에서 안 뜨길래 찾아봤더니, react <code class=\"language-text\">BrowserHistory</code>사용이 문제가 될 수 있으므로 <code class=\"language-text\">HashHistory</code>를 쓰라는  글이 있었지만, 분명 데스크탑에서는 잘 떴기 때문에 이게 원인이 아니라고 생각했는데 정말이었다. 알고보니 데스크탑 크롬에서도 표시가 안 되었고, 콘솔을 보니 <code class=\"language-text\">website.reduxDevTools</code>가 없다는 에러가 표시되고 있었다. deprecate된다는 걸 전부터 보긴 했는데 아예 없앤것이거나, 설치가 안됬을때에 대한 코드 커버가 안되있거나 한거같은데, 그냥 귀찮아서 <code class=\"language-text\">redux-devtools-extension</code> 패키지를 설치해서 적용하여 해결했다.</p>\n<p>이제 모바일도 잘 들어가진다. 다만 반응형이라기엔 아쉬운 상태.</p>\n<p>할 것:</p>\n<ul>\n<li>반응형</li>\n<li>영어 검색 개선 (같은 단어 합치기)</li>\n<li>영어 검색시 5개에서 여러개로 늘리기</li>\n<li>회원 및 개인 단어장 기능. 이거 하려면 또 한 세월 걸릴 듯.</li>\n</ul>\n<p>등..</p>\n<p>그런데 이대로 <code class=\"language-text\">test2-backup</code> 브랜치를 진행해버리면 히스토리가 너무 더러워져버린다.</p>\n<h2 id=\"tags\"><a href=\"#tags\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>tags</h2>\n<p>  #vocabo, #cloud, #aws, #aws</p>","id":"eca94f62-77dd-5e68-9062-95aca6315ee9","fields":{"slug":"vocabo-배포-마무리"},"frontmatter":{"date":"2019-06-01","title":"vocabo 배포 마무리","category":"vocabo","tags":["project/vocabo","dev/cloud","dev/cloud/aws","dev/cloud/aws"],"banner":"/assets/bg/2.jpg"},"timeToRead":1},{"excerpt":"aws Lambda로 전환 완료, https 적용 및 react devtools버그 해결(크롬 렌더링 문제). aws Lambda로  에 서버를 올렸는데 에러가 난 이유를 못찾아서 로그를 어디서 찾나 했는데 aws Lambda 다이어그램에서 확인해보니 aws CloudWatch에 기록되고 있었다. 로그를 확인해 보니 app.js 파일 1…","html":"<p>aws Lambda로 전환 완료, https 적용 및 react devtools버그 해결(크롬 렌더링 문제).</p>\n<p>aws Lambda로 <code class=\"language-text\">vocabo-api.epikem.com</code>에 서버를 올렸는데 에러가 난 이유를 못찾아서 로그를 어디서 찾나 했는데 aws Lambda 다이어그램에서 확인해보니 aws CloudWatch에 기록되고 있었다. 로그를 확인해 보니 app.js 파일 15번째 줄에서 컴파일 에러가 났는데, <code class=\"language-text\">new URL(&#39;...&#39;)</code> 부분이었다. 노드에서는 직접 <code class=\"language-text\">url</code> 모듈을 로드하지 않아도 코드가 돌아갔었는데, 람다에서는 로드를 해야하는 것이었다. 다음과 같이 <code class=\"language-text\">url</code>모듈의 <code class=\"language-text\">URL</code>을 로드하여 사용하니 이 부분은 해결되었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">URL</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'url'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>다시 패키지 빌드 및 배포를 시도하니 이번엔 url이 잘못됬다는 에러가 떴는데, 예상한 대로 환경변수 문제였다. <code class=\"language-text\">.env</code>파일 추가로는 람다 패키지 추가가 되지 않았고, 다행히 AWS CloudFormation 공식문서에서 Lambda에 환경변수를 설정하는 방법을 찾아 다음과 같이 채운 다음 다시 배포하니 성공적으로 api 서버가 등록되었다. 드디어 https 및 커스텀 도메인이 적용된 api 서버를 만들었다. 게다가 호출한 만큼만 사용되므로 절약까지 된다. 다만 클라우드 저장소는 결국 샘플에서 수정만 한 것인데, 직접 이런 템플릿을 짜라 하면 도저히 못 할거 같은 느낌이 든다.. (하지만 이건 aws&#x26;cloudformation 쪽이니 모르는게 당연한 것이다)</p>\n<p>file: cloudformation.yaml</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">vocaboLambda</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">...</span>\n  <span class=\"token key atrule\">Properties</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">...</span>\n    <span class=\"token key atrule\">Environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">Variables</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">ELASTIC_URL</span><span class=\"token punctuation\">:</span> (value)\n<span class=\"token punctuation\">...</span></code></pre></div>\n<p>api gateway에서 요청량 제한하니 진짜 제한되는것이 신기하다.</p>\n<p>이상한게, 여전히 프론트가 모바일에서 안 뜨길래 찾아봤더니, react <code class=\"language-text\">BrowserHistory</code>사용이 문제가 될 수 있으므로 <code class=\"language-text\">HashHistory</code>를 쓰라는  글이 있었지만, 분명 데스크탑에서는 잘 떴기 때문에 이게 원인이 아니라고 생각했는데 정말이었다. 알고보니 데스크탑 크롬에서도 표시가 안 되었고, 콘솔을 보니 <code class=\"language-text\">website.reduxDevTools</code>가 없다는 에러가 표시되고 있었다. deprecate된다는 걸 전부터 보긴 했는데 아예 없앤것이거나, 설치가 안됬을때에 대한 코드 커버가 안되있거나 한거같은데, 그냥 귀찮아서 <code class=\"language-text\">redux-devtools-extension</code> 패키지를 설치해서 적용하여 해결했다.</p>\n<p>이제 모바일도 잘 들어가진다. 다만 반응형이라기엔 아쉬운 상태.</p>\n<p>할 것:</p>\n<ul>\n<li>반응형</li>\n<li>영어 검색 개선 (같은 단어 합치기)</li>\n<li>영어 검색시 5개에서 여러개로 늘리기</li>\n<li>회원 및 개인 단어장 기능. 이거 하려면 또 한 세월 걸릴 듯.</li>\n</ul>\n<p>등..</p>\n<p>그런데 이대로 <code class=\"language-text\">test2-backup</code> 브랜치를 진행해버리면 히스토리가 너무 더러워져버린다.</p>\n<h2 id=\"tags\"><a href=\"#tags\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>tags</h2>\n<p>  #vocabo, #cloud, #aws, #aws</p>","id":"eca94f62-77dd-5e68-9062-95aca6315ee9","fields":{"slug":"vocabo-배포-마무리"},"frontmatter":{"date":"2019-06-01","title":"vocabo 배포 마무리","category":"vocabo","tags":["project/vocabo","dev/cloud","dev/cloud/aws","dev/cloud/aws"],"banner":"/assets/bg/2.jpg"},"timeToRead":1},{"excerpt":"다음과 같이  에 람다에 환경변수를 추가할 수 있다. 아래는 예시. tags til, #cloud, #aws, #aws-cloudformation","html":"<p>다음과 같이 <code class=\"language-text\">cloudformation.yaml</code>에 람다에 환경변수를 추가할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">(lambda-function-name)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">...</span>\n  <span class=\"token key atrule\">Properties</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">...</span>\n    <span class=\"token key atrule\">Environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">Variables</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">(environment-variable-key)</span><span class=\"token punctuation\">:</span> (value)\n<span class=\"token punctuation\">...</span></code></pre></div>\n<p>아래는 예시.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">vocaboLambda</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">...</span>\n  <span class=\"token key atrule\">Properties</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">...</span>\n    <span class=\"token key atrule\">Environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">Variables</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">ELASTIC_URL</span><span class=\"token punctuation\">:</span> http<span class=\"token punctuation\">:</span>//localhost<span class=\"token punctuation\">:</span>9200/\n<span class=\"token punctuation\">...</span></code></pre></div>\n<h2 id=\"tags\"><a href=\"#tags\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>tags</h2>\n<h1 id=\"til-cloud-aws-aws-cloudformation\"><a href=\"#til-cloud-aws-aws-cloudformation\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>til, #cloud, #aws, #aws-cloudformation</h1>","id":"2ef9fa87-9d27-5abf-85ea-2d5ebfb5d338","fields":{"slug":"aws-cloudformation-lambda-add-environment-variables"},"frontmatter":{"date":"2019-05-31","title":"aws-cloudformation-lambda-add-environment-variables","category":"TIL","tags":["dev/til","dev/cloud","dev/cloud/aws","dev/cloud/aws"],"banner":"/assets/bg/4.jpg"},"timeToRead":1},{"excerpt":"다음과 같이  에 람다에 환경변수를 추가할 수 있다. 아래는 예시. tags til, #cloud, #aws, #aws-cloudformation","html":"<p>다음과 같이 <code class=\"language-text\">cloudformation.yaml</code>에 람다에 환경변수를 추가할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">(lambda-function-name)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">...</span>\n  <span class=\"token key atrule\">Properties</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">...</span>\n    <span class=\"token key atrule\">Environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">Variables</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">(environment-variable-key)</span><span class=\"token punctuation\">:</span> (value)\n<span class=\"token punctuation\">...</span></code></pre></div>\n<p>아래는 예시.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">vocaboLambda</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">...</span>\n  <span class=\"token key atrule\">Properties</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">...</span>\n    <span class=\"token key atrule\">Environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">Variables</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">ELASTIC_URL</span><span class=\"token punctuation\">:</span> http<span class=\"token punctuation\">:</span>//localhost<span class=\"token punctuation\">:</span>9200/\n<span class=\"token punctuation\">...</span></code></pre></div>\n<h2 id=\"tags\"><a href=\"#tags\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>tags</h2>\n<h1 id=\"til-cloud-aws-aws-cloudformation\"><a href=\"#til-cloud-aws-aws-cloudformation\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>til, #cloud, #aws, #aws-cloudformation</h1>","id":"2ef9fa87-9d27-5abf-85ea-2d5ebfb5d338","fields":{"slug":"aws-cloudformation-lambda-add-environment-variables"},"frontmatter":{"date":"2019-05-31","title":"aws-cloudformation-lambda-add-environment-variables","category":"TIL","tags":["dev/til","dev/cloud","dev/cloud/aws","dev/cloud/aws"],"banner":"/assets/bg/4.jpg"},"timeToRead":1},{"excerpt":"aws Lambda로 전환 완료, https 적용 및 react devtools버그 해결(크롬 렌더링 문제). aws Lambda로  에 서버를 올렸는데 에러가 난 이유를 못찾아서 로그를 어디서 찾나 했는데 aws Lambda 다이어그램에서 확인해보니 aws CloudWatch에 기록되고 있었다. 로그를 확인해 보니 app.js 파일 1…","html":"<p>aws Lambda로 전환 완료, https 적용 및 react devtools버그 해결(크롬 렌더링 문제).</p>\n<p>aws Lambda로 <code class=\"language-text\">vocabo-api.epikem.com</code>에 서버를 올렸는데 에러가 난 이유를 못찾아서 로그를 어디서 찾나 했는데 aws Lambda 다이어그램에서 확인해보니 aws CloudWatch에 기록되고 있었다. 로그를 확인해 보니 app.js 파일 15번째 줄에서 컴파일 에러가 났는데, <code class=\"language-text\">new URL(&#39;...&#39;)</code> 부분이었다. 노드에서는 직접 <code class=\"language-text\">url</code> 모듈을 로드하지 않아도 코드가 돌아갔었는데, 람다에서는 로드를 해야하는 것이었다. 다음과 같이 <code class=\"language-text\">url</code>모듈의 <code class=\"language-text\">URL</code>을 로드하여 사용하니 이 부분은 해결되었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">URL</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'url'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>다시 패키지 빌드 및 배포를 시도하니 이번엔 url이 잘못됬다는 에러가 떴는데, 예상한 대로 환경변수 문제였다. <code class=\"language-text\">.env</code>파일 추가로는 람다 패키지 추가가 되지 않았고, 다행히 AWS CloudFormation 공식문서에서 Lambda에 환경변수를 설정하는 방법을 찾아 다음과 같이 채운 다음 다시 배포하니 성공적으로 api 서버가 등록되었다. 드디어 https 및 커스텀 도메인이 적용된 api 서버를 만들었다. 게다가 호출한 만큼만 사용되므로 절약까지 된다. 다만 클라우드 저장소는 결국 샘플에서 수정만 한 것인데, 직접 이런 템플릿을 짜라 하면 도저히 못 할거 같은 느낌이 든다.. (하지만 이건 aws&#x26;cloudformation 쪽이니 모르는게 당연한 것이다)</p>\n<p>file: cloudformation.yaml</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">vocaboLambda</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">...</span>\n  <span class=\"token key atrule\">Properties</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">...</span>\n    <span class=\"token key atrule\">Environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">Variables</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">ELASTIC_URL</span><span class=\"token punctuation\">:</span> (value)\n<span class=\"token punctuation\">...</span></code></pre></div>\n<p>api gateway에서 요청량 제한하니 진짜 제한되는것이 신기하다.</p>\n<p>이상한게, 여전히 프론트가 모바일에서 안 뜨길래 찾아봤더니, react <code class=\"language-text\">BrowserHistory</code>사용이 문제가 될 수 있으므로 <code class=\"language-text\">HashHistory</code>를 쓰라는  글이 있었지만, 분명 데스크탑에서는 잘 떴기 때문에 이게 원인이 아니라고 생각했는데 정말이었다. 알고보니 데스크탑 크롬에서도 표시가 안 되었고, 콘솔을 보니 <code class=\"language-text\">website.reduxDevTools</code>가 없다는 에러가 표시되고 있었다. deprecate된다는 걸 전부터 보긴 했는데 아예 없앤것이거나, 설치가 안됬을때에 대한 코드 커버가 안되있거나 한거같은데, 그냥 귀찮아서 <code class=\"language-text\">redux-devtools-extension</code> 패키지를 설치해서 적용하여 해결했다.</p>\n<p>이제 모바일도 잘 들어가진다. 다만 반응형이라기엔 아쉬운 상태.</p>\n<p>할 것:</p>\n<ul>\n<li>반응형</li>\n<li>영어 검색 개선 (같은 단어 합치기)</li>\n<li>영어 검색시 5개에서 여러개로 늘리기</li>\n<li>회원 및 개인 단어장 기능. 이거 하려면 또 한 세월 걸릴 듯.</li>\n</ul>\n<p>등..</p>\n<p>그런데 이대로 <code class=\"language-text\">test2-backup</code> 브랜치를 진행해버리면 히스토리가 너무 더러워져버린다.</p>\n<h2 id=\"tags\"><a href=\"#tags\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>tags</h2>\n<h1 id=\"vocabo-cloud-aws-aws-cloudformation\"><a href=\"#vocabo-cloud-aws-aws-cloudformation\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>vocabo, #cloud, #aws, #aws-cloudformation</h1>","id":"70f6e6da-f9ad-536f-b1b3-01b71d96d337","fields":{"slug":"vocabo-배포-마무리"},"frontmatter":{"date":"2019-05-31","title":"vocabo 배포 마무리","category":"vocabo","tags":["project/vocabo","dev/cloud","dev/cloud/aws","dev/cloud/aws"],"banner":"/assets/bg/4.jpg"},"timeToRead":1},{"excerpt":"aws Lambda로 전환 완료, https 적용 및 react devtools버그 해결(크롬 렌더링 문제). aws Lambda로  에 서버를 올렸는데 에러가 난 이유를 못찾아서 로그를 어디서 찾나 했는데 aws Lambda 다이어그램에서 확인해보니 aws CloudWatch에 기록되고 있었다. 로그를 확인해 보니 app.js 파일 1…","html":"<p>aws Lambda로 전환 완료, https 적용 및 react devtools버그 해결(크롬 렌더링 문제).</p>\n<p>aws Lambda로 <code class=\"language-text\">vocabo-api.epikem.com</code>에 서버를 올렸는데 에러가 난 이유를 못찾아서 로그를 어디서 찾나 했는데 aws Lambda 다이어그램에서 확인해보니 aws CloudWatch에 기록되고 있었다. 로그를 확인해 보니 app.js 파일 15번째 줄에서 컴파일 에러가 났는데, <code class=\"language-text\">new URL(&#39;...&#39;)</code> 부분이었다. 노드에서는 직접 <code class=\"language-text\">url</code> 모듈을 로드하지 않아도 코드가 돌아갔었는데, 람다에서는 로드를 해야하는 것이었다. 다음과 같이 <code class=\"language-text\">url</code>모듈의 <code class=\"language-text\">URL</code>을 로드하여 사용하니 이 부분은 해결되었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">URL</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'url'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>다시 패키지 빌드 및 배포를 시도하니 이번엔 url이 잘못됬다는 에러가 떴는데, 예상한 대로 환경변수 문제였다. <code class=\"language-text\">.env</code>파일 추가로는 람다 패키지 추가가 되지 않았고, 다행히 AWS CloudFormation 공식문서에서 Lambda에 환경변수를 설정하는 방법을 찾아 다음과 같이 채운 다음 다시 배포하니 성공적으로 api 서버가 등록되었다. 드디어 https 및 커스텀 도메인이 적용된 api 서버를 만들었다. 게다가 호출한 만큼만 사용되므로 절약까지 된다. 다만 클라우드 저장소는 결국 샘플에서 수정만 한 것인데, 직접 이런 템플릿을 짜라 하면 도저히 못 할거 같은 느낌이 든다.. (하지만 이건 aws&#x26;cloudformation 쪽이니 모르는게 당연한 것이다)</p>\n<p>file: cloudformation.yaml</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">vocaboLambda</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">...</span>\n  <span class=\"token key atrule\">Properties</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">...</span>\n    <span class=\"token key atrule\">Environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">Variables</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">ELASTIC_URL</span><span class=\"token punctuation\">:</span> (value)\n<span class=\"token punctuation\">...</span></code></pre></div>\n<p>api gateway에서 요청량 제한하니 진짜 제한되는것이 신기하다.</p>\n<p>이상한게, 여전히 프론트가 모바일에서 안 뜨길래 찾아봤더니, react <code class=\"language-text\">BrowserHistory</code>사용이 문제가 될 수 있으므로 <code class=\"language-text\">HashHistory</code>를 쓰라는  글이 있었지만, 분명 데스크탑에서는 잘 떴기 때문에 이게 원인이 아니라고 생각했는데 정말이었다. 알고보니 데스크탑 크롬에서도 표시가 안 되었고, 콘솔을 보니 <code class=\"language-text\">website.reduxDevTools</code>가 없다는 에러가 표시되고 있었다. deprecate된다는 걸 전부터 보긴 했는데 아예 없앤것이거나, 설치가 안됬을때에 대한 코드 커버가 안되있거나 한거같은데, 그냥 귀찮아서 <code class=\"language-text\">redux-devtools-extension</code> 패키지를 설치해서 적용하여 해결했다.</p>\n<p>이제 모바일도 잘 들어가진다. 다만 반응형이라기엔 아쉬운 상태.</p>\n<p>할 것:</p>\n<ul>\n<li>반응형</li>\n<li>영어 검색 개선 (같은 단어 합치기)</li>\n<li>영어 검색시 5개에서 여러개로 늘리기</li>\n<li>회원 및 개인 단어장 기능. 이거 하려면 또 한 세월 걸릴 듯.</li>\n</ul>\n<p>등..</p>\n<p>그런데 이대로 <code class=\"language-text\">test2-backup</code> 브랜치를 진행해버리면 히스토리가 너무 더러워져버린다.</p>\n<h2 id=\"tags\"><a href=\"#tags\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>tags</h2>\n<h1 id=\"vocabo-cloud-aws-aws-cloudformation\"><a href=\"#vocabo-cloud-aws-aws-cloudformation\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>vocabo, #cloud, #aws, #aws-cloudformation</h1>","id":"70f6e6da-f9ad-536f-b1b3-01b71d96d337","fields":{"slug":"vocabo-배포-마무리"},"frontmatter":{"date":"2019-05-31","title":"vocabo 배포 마무리","category":"vocabo","tags":["project/vocabo","dev/cloud","dev/cloud/aws","dev/cloud/aws"],"banner":"/assets/bg/4.jpg"},"timeToRead":1}],"tagName":"dev/cloud/aws"}}