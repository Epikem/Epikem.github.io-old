{"pageContext":{"posts":[{"excerpt":"gh-pages로 블로그 올림. 분명히 master 브랜치를 다 지웠는데도 계속   라는 에러가 떠서 왜그런가 했더니,   노드 모듈의 캐시에 저장되있어서였다.  https://github.com/transitive-bullshit/react-modern-library-boilerplate/issues/15  여기에 나온대로  의 캐시를 지웠더니 잘 된다. tags    # blog,  # github-pages","html":"<h3 id=\"gh-pages로-블로그-올림\"><a href=\"#gh-pages%EB%A1%9C-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EC%98%AC%EB%A6%BC\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>gh-pages로 블로그 올림.</h3>\n<p>분명히 master 브랜치를 다 지웠는데도 계속 <code class=\"language-text\">A branch named &#39;master&#39; already exists.</code> 라는 에러가 떠서 왜그런가 했더니, <code class=\"language-text\">gh-pages</code> 노드 모듈의 캐시에 저장되있어서였다. </p>\n<p><a href=\"https://github.com/transitive-bullshit/react-modern-library-boilerplate/issues/15\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/transitive-bullshit/react-modern-library-boilerplate/issues/15</a> 여기에 나온대로 <code class=\"language-text\">gh-pages</code>의 캐시를 지웠더니 잘 된다.</p>\n<h2 id=\"tags\"><a href=\"#tags\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>tags</h2>\n<p>  #blog, #github-pages</p>","id":"d10a64b5-ce52-5998-9cac-ab1805376af1","fields":{"slug":"2019-05-25"},"frontmatter":{"date":"2019-05-25","title":"2019-05-25","category":"blog","tags":["blog"],"banner":"/assets/bg/2.jpg"},"timeToRead":1},{"excerpt":"gh-pages로 블로그 올림. 분명히 master 브랜치를 다 지웠는데도 계속   라는 에러가 떠서 왜그런가 했더니,   노드 모듈의 캐시에 저장되있어서였다.  https://github.com/transitive-bullshit/react-modern-library-boilerplate/issues/15  여기에 나온대로  의 캐시를 지웠더니 잘 된다. tags    # blog,  # github-pages","html":"<h3 id=\"gh-pages로-블로그-올림\"><a href=\"#gh-pages%EB%A1%9C-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EC%98%AC%EB%A6%BC\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>gh-pages로 블로그 올림.</h3>\n<p>분명히 master 브랜치를 다 지웠는데도 계속 <code class=\"language-text\">A branch named &#39;master&#39; already exists.</code> 라는 에러가 떠서 왜그런가 했더니, <code class=\"language-text\">gh-pages</code> 노드 모듈의 캐시에 저장되있어서였다. </p>\n<p><a href=\"https://github.com/transitive-bullshit/react-modern-library-boilerplate/issues/15\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/transitive-bullshit/react-modern-library-boilerplate/issues/15</a> 여기에 나온대로 <code class=\"language-text\">gh-pages</code>의 캐시를 지웠더니 잘 된다.</p>\n<h2 id=\"tags\"><a href=\"#tags\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>tags</h2>\n<p>  #blog, #github-pages</p>","id":"1f26bb2a-50ae-5984-a2ae-13a5195f63cd","fields":{"slug":"2019-05-24"},"frontmatter":{"date":"2019-05-24","title":"2019-05-24","category":"blog","tags":["blog"],"banner":"/assets/bg/4.jpg"},"timeToRead":1},{"excerpt":"docker for aws (swarm)으로 aws 배포 성공 그놈의 invalid host header 문제를 드디어 해결했다. 원하던 방식으로 한 건 아니고 그냥 빌드해서  로  를 설치하고  으로 응답하게 했는데, 또 계속 안되다가 이상하게 그냥  로는 500…","html":"<h3 id=\"docker-for-aws-swarm으로-aws-배포-성공\"><a href=\"#docker-for-aws-swarm%EC%9C%BC%EB%A1%9C-aws-%EB%B0%B0%ED%8F%AC-%EC%84%B1%EA%B3%B5\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>docker for aws (swarm)으로 aws 배포 성공</h3>\n<p>그놈의 invalid host header 문제를 드디어 해결했다. 원하던 방식으로 한 건 아니고 그냥 빌드해서 <code class=\"language-text\">yarn global add serve</code>로 <code class=\"language-text\">serve</code>를 설치하고 <code class=\"language-text\">serve -s build -l 3000</code>으로 응답하게 했는데, 또 계속 안되다가 이상하게 그냥 <code class=\"language-text\">serve -s build</code>로는 5000포트에서 성공하길래 왜인가 했더니 <code class=\"language-text\">docker-compose.yml</code>에 필요없는 <code class=\"language-text\">expose: 3000</code> 옵션 때문이었다. 지우고 다시 <code class=\"language-text\">command: serve -s build -l 3000</code>으로 돌리자 드디어 클라이언트 앱이 떴다. 다만 서버에 연결 및 서버 자체로 elasticsearch service와는 연결이 안되었는데, 하도 스택 생성/삭제를 반복했더니 ec2 사용 시간 요금은 다 쓰지도 않았는데 벌써 ec2 ebs io 프리 티어 제한을 넘어 요금이 2만원을 넘어버려서 그냥 다 지워버렸다. vocabo-cluster의 vpc와 elasticsearch의 vpc를 연결하려 해봤는데, 문서를 찾아보니 한 vpc 내에서 퍼블릭/프라이빗 서브넷 생성이 가능하다고 되있어서 그렇게 하는 식으로 바꿔야할 거 같다.</p>\n<p>어쨌든 dev/prod 파이프라인을 짜보고 싶은데 지금 방식은 prod쪽이다..</p>\n<h2 id=\"tags\"><a href=\"#tags\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>tags</h2>\n<p>  #vocabo, #aws, </p>","id":"273c5d5c-6adb-5651-9771-87c122f82466","fields":{"slug":"2019-05-22"},"frontmatter":{"date":"2019-05-22","title":"2019-05-22","category":"blog","tags":["blog"],"banner":"/assets/bg/3.jpg"},"timeToRead":1},{"excerpt":"aws eks에 쿠버네티스 배포해보려 했으나 실패 iam에서 역할 만들고  도 설치했는데도 로그인이 도저히 안 된다. 설명을 보니까 아마 클러스터를 만든 vocabo-cluster-admin으로 명령을 줘야 하는데, aws 로그인은 그냥 admin으로 되어있는게 원인일거 같은데, 그러면 뭐 할 때마다 로그인/로그아웃 해야하는건 아닐테고, 어떻게 설정을 해야하는건지.. \n또 찾아보니 무슨 역할 부여 권한? assumeRole…","html":"<h3 id=\"aws-eks에-쿠버네티스-배포해보려-했으나-실패\"><a href=\"#aws-eks%EC%97%90-%EC%BF%A0%EB%B2%84%EB%84%A4%ED%8B%B0%EC%8A%A4-%EB%B0%B0%ED%8F%AC%ED%95%B4%EB%B3%B4%EB%A0%A4-%ED%96%88%EC%9C%BC%EB%82%98-%EC%8B%A4%ED%8C%A8\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>aws eks에 쿠버네티스 배포해보려 했으나 실패</h3>\n<p>iam에서 역할 만들고 <code class=\"language-text\">aws-iam-authenticator</code>도 설치했는데도 로그인이 도저히 안 된다. 설명을 보니까 아마 클러스터를 만든 vocabo-cluster-admin으로 명령을 줘야 하는데, aws 로그인은 그냥 admin으로 되어있는게 원인일거 같은데, 그러면 뭐 할 때마다 로그인/로그아웃 해야하는건 아닐테고, 어떻게 설정을 해야하는건지..\n또 찾아보니 무슨 역할 부여 권한? assumeRole?관련 설정이 필요한 거 같은데 루트 관리자 계정에는 그걸 설정 못한다는거 같기도 하고..</p>\n<p>유투브 영상으로 튜토리얼을 보는게 낫겠다.</p>\n<h2 id=\"tags\"><a href=\"#tags\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>tags</h2>\n<p>  #vocabo, #aws, </p>\n<!-- # TIL\n\n## tags\n  \\#powershell, \\#windows -->","id":"e596ef55-787f-5bd9-a576-d5ae2f66b325","fields":{"slug":"2019-05-20"},"frontmatter":{"date":"2019-05-20","title":"2019-05-20","category":"blog","tags":["blog"],"banner":"/assets/bg/3.jpg"},"timeToRead":1},{"excerpt":"vocabo docker swarm for aws로 예제 앱 배포 성공 aws 매니저 노드에 ssh로 연결해서 예제 앱 ( https://github.com/dockersamples/example-voting-app )의  만 카피해서  로 하니 성공함.\n정확히는 내 서비스도 올려봤지만 매니저 노드의 퍼블릭 ip로 접근해도 접속이 안 되서 대체 어떻게 접속해야하는건지 하고 고민하다가 예제 앱을 올려도 여전히 접속이 안되길래 봤더니 docker…","html":"<h3 id=\"vocabo-docker-swarm-for-aws로-예제-앱-배포-성공\"><a href=\"#vocabo-docker-swarm-for-aws%EB%A1%9C-%EC%98%88%EC%A0%9C-%EC%95%B1-%EB%B0%B0%ED%8F%AC-%EC%84%B1%EA%B3%B5\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>vocabo docker swarm for aws로 예제 앱 배포 성공</h3>\n<p>aws 매니저 노드에 ssh로 연결해서 예제 앱 (<a href=\"https://github.com/dockersamples/example-voting-app\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/dockersamples/example-voting-app</a>)의 <code class=\"language-text\">docker-stack.yml</code>만 카피해서 <code class=\"language-text\">docker stack deploy sample -c docker-stack.yml</code>로 하니 성공함.\n정확히는 내 서비스도 올려봤지만 매니저 노드의 퍼블릭 ip로 접근해도 접속이 안 되서 대체 어떻게 접속해야하는건지 하고 고민하다가 예제 앱을 올려도 여전히 접속이 안되길래 봤더니 docker-for-aws의 'Deploy your app' 탭이 아니라, 'Load balancer' 탭에 설명이 나와 있었다. </p>\n<p>설명을 보니, port 매핑만 하면 뭔가 자동으로 접속이 가능해지기는 하는데, dns 도메인 연결은 직접 해줘야 하는 것이다. 생각해보면 당연하다. 근데 ssl/tls 트래픽(아마도 https 말하는걸까?)을 받으려면 추가 설정이 필요한 듯 하다.</p>\n<p>어쨌든 dns 설정을 하고 나니 예제 앱은 잘 돌아갔다. 문제는 내린 다음 내 앱을 돌렸을 때 <code class=\"language-text\">invalid host header</code>라 뜨며 프론트엔드가 접속이 안 된다는 점이다. 서버의 경우 접속이 된다. </p>\n<p>저걸 고치려면 webpack devserver 관련 설정을 해줘야 하는 듯 한데, 그러려면 eject를 해야하고, 그러면 버전 업뎃이 힘들어진다..</p>\n<p>그리고 그걸 하더라도 지금 좀 고민되는게, skaffold는 sync라는 기능을 지원하는데, docker-swarm에도 비슷한 기능이 있을까 싶어서 (어쩌면 그냥 context 설정으로 될지도) 좀 연구가 필요하다.</p>\n<p>TODO</p>\n<ol>\n<li>빠르게 개발 가능한 sync 기능 포함한 dev pipeline</li>\n<li>배포용 build pipeline</li>\n<li>위 두 가지를 클라우드에서 돌릴 수 있어야.</li>\n</ol>\n<h2 id=\"tags\"><a href=\"#tags\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>tags</h2>\n<p>  #vocabo, #aws, </p>","id":"c7dad62c-ac92-59e2-8ff9-c322f8782061","fields":{"slug":"2019-05-16"},"frontmatter":{"date":"2019-05-16","title":"2019-05-16","category":"blog","tags":["blog"],"banner":"/assets/bg/3.jpg"},"timeToRead":1},{"excerpt":"vocabo 아직도 쿠버네티스 통신으로 씨름중 5 skaffold를 써도 잘 안됬다. 이상한 점은, 같은 도커 이미지를 써도,  으로 실행하면, elastic-built 이미지가 잘 실행되어 모든 서비스가 잘 동작하는데, skaffold를 이용하여 쿠버네티스에 올려서 로그를 확인해 보면, 서버에서 떠야 할 로그를 (localhost 3001 접속 대기중) 띄운다. 도대체 왜 이렇게 달라지지? 싶었는데, 찾아보니 elasticsearch…","html":"<h3 id=\"vocabo-아직도-쿠버네티스-통신으로-씨름중-5\"><a href=\"#vocabo-%EC%95%84%EC%A7%81%EB%8F%84-%EC%BF%A0%EB%B2%84%EB%84%A4%ED%8B%B0%EC%8A%A4-%ED%86%B5%EC%8B%A0%EC%9C%BC%EB%A1%9C-%EC%94%A8%EB%A6%84%EC%A4%91-5\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>vocabo 아직도 쿠버네티스 통신으로 씨름중 5</h3>\n<p>skaffold를 써도 잘 안됬다. 이상한 점은, 같은 도커 이미지를 써도, <code class=\"language-text\">docker-compose up</code>으로 실행하면, elastic-built 이미지가 잘 실행되어 모든 서비스가 잘 동작하는데, skaffold를 이용하여 쿠버네티스에 올려서 로그를 확인해 보면, 서버에서 떠야 할 로그를 (localhost 3001 접속 대기중) 띄운다. 도대체 왜 이렇게 달라지지? 싶었는데, 찾아보니 elasticsearch를 실행하기 위해 작업 부하에서? vm-memory 관련 사이즈 설정 및 기타등등 복잡한 설정을 해줘야 한다고 되어있다. 그게 안 되어있어서 실행되다 꺼져버린건지, 아니면 <code class=\"language-text\">docker-compose.yaml</code>에서 다른 서비스들은 시작 명령들을 줬는데, elastic은 그것 없이도 실행됬었는데, 그게 쿠버네티스에서는 다른 동작을 하게 만든것인지 헷갈린다.</p>\n<p>직접 쿠버네티스 설정을 다 해서 돌리게 할 지, 아니면 구글 마켓플레이스에서 간편 배포로 elasticsearch 또는 bitnami 사에서 만든 elk 스택이 있는데, 이걸 쓰면 편하긴 하지만 내가 직접 설정해보지 못하게 된다..</p>\n<p>또는 쿠버네티스를 포기하고 도커 스웜으로 하는 방법도 있다.</p>\n<ol>\n<li>어떻게든 쿠버네티스에 직접 올린다.</li>\n<li>완성된 elk 스택에 logstash로 데이터만 올린다.</li>\n<li>도커 스웜으로 올린다.</li>\n</ol>\n<p>현재로선 2번 방법이 가장 빠를 것으로 보인다. 3번은 한 번 시도해볼만 한데 또 분명 무슨 문제가 생길 것이고, 저걸 클라우드에 올리는게 상당히 일일 것이다.</p>\n<p><a href=\"https://www.slideshare.net/awskorea/docker-swarm-on-aws\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.slideshare.net/awskorea/docker-swarm-on-aws</a>\n이 자료는 괜찮긴 한데, 이걸 보면 설정 파일 없이 하나하나 설정해서 하는데 이건 또 나름대로 문제가 될 수 있다 (아니면 docker-compose로 호환 되는것일수도).</p>\n<p><a href=\"https://docs.docker.com/docker-for-aws/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://docs.docker.com/docker-for-aws/</a></p>\n<p>그리고 지금 pc2긴 한데, 분명 kengdic 단어리스트가 있던거로 아는데, 여기엔 없다.</p>\n<p>...</p>\n<p>pc1에도 없다. 아무래도 용량이 너무 커서 없앤거 같은데, 어디에 뒀지? 아예 없애지는 않았을 텐데.</p>\n<p>이전 프로젝트명인 memorybook 폴더에 있었다.</p>\n<p>드디어!! logstash로 배포된 elasticsearch에 데이터를 넣었다. </p>\n<p>그런데, 데이터를 다 넣었고 credential문제도 해결했는데도 (url을 <code class=\"language-text\">&lt;username&gt;:&lt;password&gt;@&lt;host&gt;:&lt;port&gt;/elasticsearch</code> 이렇게 하니깐 되었다. 실제 사용: <code class=\"language-text\">user:(Password)@(elkIP):80/elasticsearch</code> 로 했음. 이상하게 지정 안 했을때의 elasticsearch 기본 포트인 9200으로는 안 되고, 브라우저로는 되길래 브라우저의 포트인 80을 쓰게 했더니 연결이 되었다.)\nsuggest 관련 무슨 검색 에러가 떴는데, 생각해보니 kengdic스키마를 제대로 만들지 않고 그냥 logstash로 밀어넣기만 했다. 제대로 작동하려면 jaso-tokenizer 및 nori-analyzer를 설치하여 스키마를 먼저 만들어주어야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">lugin<span class=\"token operator\">-</span><span class=\"token number\">7.0</span><span class=\"token number\">.0</span><span class=\"token number\">.0</span><span class=\"token operator\">-</span>plugin<span class=\"token punctuation\">.</span>zip\n<span class=\"token operator\">-</span><span class=\"token operator\">></span> Downloading https<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>s3<span class=\"token punctuation\">.</span>ap<span class=\"token operator\">-</span>northeast<span class=\"token operator\">-</span><span class=\"token number\">2.</span>amazonaws<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>file<span class=\"token punctuation\">.</span>epikem<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>jaso<span class=\"token operator\">-</span>analyzer<span class=\"token operator\">-</span>plugin<span class=\"token operator\">-</span><span class=\"token number\">7.0</span><span class=\"token number\">.0</span><span class=\"token number\">.0</span><span class=\"token operator\">-</span>plugin<span class=\"token punctuation\">.</span>zip\n<span class=\"token punctuation\">[</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">=</span><span class=\"token punctuation\">]</span> <span class=\"token number\">100</span><span class=\"token operator\">%</span>  \nException <span class=\"token keyword\">in</span> thread <span class=\"token string\">\"main\"</span> java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span>IllegalArgumentException<span class=\"token punctuation\">:</span> Plugin <span class=\"token punctuation\">[</span>jaso<span class=\"token operator\">-</span>analyzer<span class=\"token punctuation\">]</span> was built <span class=\"token keyword\">for</span> Elasticsearch version <span class=\"token number\">7.0</span><span class=\"token number\">.0</span> but version <span class=\"token number\">7.0</span><span class=\"token number\">.1</span> is running\n        at org<span class=\"token punctuation\">.</span>elasticsearch<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span>PluginsService<span class=\"token punctuation\">.</span><span class=\"token function\">verifyCompatibility</span><span class=\"token punctuation\">(</span>PluginsService<span class=\"token punctuation\">.</span>java<span class=\"token punctuation\">:</span><span class=\"token number\">346</span><span class=\"token punctuation\">)</span>\n        at org<span class=\"token punctuation\">.</span>elasticsearch<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span>InstallPluginCommand<span class=\"token punctuation\">.</span><span class=\"token function\">loadPluginInfo</span><span class=\"token punctuation\">(</span>InstallPluginCommand<span class=\"token punctuation\">.</span>java<span class=\"token punctuation\">:</span><span class=\"token number\">718</span><span class=\"token punctuation\">)</span>\n        at org<span class=\"token punctuation\">.</span>elasticsearch<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span>InstallPluginCommand<span class=\"token punctuation\">.</span><span class=\"token function\">installPlugin</span><span class=\"token punctuation\">(</span>InstallPluginCommand<span class=\"token punctuation\">.</span>java<span class=\"token punctuation\">:</span><span class=\"token number\">793</span><span class=\"token punctuation\">)</span>\n        at org<span class=\"token punctuation\">.</span>elasticsearch<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span>InstallPluginCommand<span class=\"token punctuation\">.</span><span class=\"token function\">install</span><span class=\"token punctuation\">(</span>InstallPluginCommand<span class=\"token punctuation\">.</span>java<span class=\"token punctuation\">:</span><span class=\"token number\">776</span><span class=\"token punctuation\">)</span>\n        at org<span class=\"token punctuation\">.</span>elasticsearch<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span>InstallPluginCommand<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span>InstallPluginCommand<span class=\"token punctuation\">.</span>java<span class=\"token punctuation\">:</span><span class=\"token number\">231</span><span class=\"token punctuation\">)</span>\n        at org<span class=\"token punctuation\">.</span>elasticsearch<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span>InstallPluginCommand<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span>InstallPluginCommand<span class=\"token punctuation\">.</span>java<span class=\"token punctuation\">:</span><span class=\"token number\">216</span><span class=\"token punctuation\">)</span>\n        at org<span class=\"token punctuation\">.</span>elasticsearch<span class=\"token punctuation\">.</span>cli<span class=\"token punctuation\">.</span>EnvironmentAwareCommand<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span>EnvironmentAwareCommand<span class=\"token punctuation\">.</span>java<span class=\"token punctuation\">:</span><span class=\"token number\">86</span><span class=\"token punctuation\">)</span>\n        at org<span class=\"token punctuation\">.</span>elasticsearch<span class=\"token punctuation\">.</span>cli<span class=\"token punctuation\">.</span>Command<span class=\"token punctuation\">.</span><span class=\"token function\">mainWithoutErrorHandling</span><span class=\"token punctuation\">(</span>Command<span class=\"token punctuation\">.</span>java<span class=\"token punctuation\">:</span><span class=\"token number\">124</span><span class=\"token punctuation\">)</span>\n        at org<span class=\"token punctuation\">.</span>elasticsearch<span class=\"token punctuation\">.</span>cli<span class=\"token punctuation\">.</span>MultiCommand<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span>MultiCommand<span class=\"token punctuation\">.</span>java<span class=\"token punctuation\">:</span><span class=\"token number\">77</span><span class=\"token punctuation\">)</span>\n        at org<span class=\"token punctuation\">.</span>elasticsearch<span class=\"token punctuation\">.</span>cli<span class=\"token punctuation\">.</span>Command<span class=\"token punctuation\">.</span><span class=\"token function\">mainWithoutErrorHandling</span><span class=\"token punctuation\">(</span>Command<span class=\"token punctuation\">.</span>java<span class=\"token punctuation\">:</span><span class=\"token number\">124</span><span class=\"token punctuation\">)</span>\n        at org<span class=\"token punctuation\">.</span>elasticsearch<span class=\"token punctuation\">.</span>cli<span class=\"token punctuation\">.</span>Command<span class=\"token punctuation\">.</span><span class=\"token function\">main</span><span class=\"token punctuation\">(</span>Command<span class=\"token punctuation\">.</span>java<span class=\"token punctuation\">:</span><span class=\"token number\">90</span><span class=\"token punctuation\">)</span>\n        at org<span class=\"token punctuation\">.</span>elasticsearch<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span>PluginCli<span class=\"token punctuation\">.</span><span class=\"token function\">main</span><span class=\"token punctuation\">(</span>PluginCli<span class=\"token punctuation\">.</span>java<span class=\"token punctuation\">:</span><span class=\"token number\">47</span><span class=\"token punctuation\">)</span>\nAdministrator@elk<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>vm<span class=\"token punctuation\">:</span><span class=\"token operator\">~</span>$ sudo elasticsearch<span class=\"token operator\">-</span>plugin install https<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>s3<span class=\"token punctuation\">.</span>ap<span class=\"token operator\">-</span>northeast<span class=\"token operator\">-</span><span class=\"token number\">2.</span>amazonaws<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>file<span class=\"token punctuation\">.</span>epikem<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>jaso<span class=\"token operator\">-</span>analyzer<span class=\"token operator\">-</span>plugin<span class=\"token operator\">-</span><span class=\"token number\">7.0</span><span class=\"token number\">.1</span><span class=\"token number\">.0</span><span class=\"token operator\">-</span>plugin<span class=\"token punctuation\">.</span>zip\n<span class=\"token operator\">-</span><span class=\"token operator\">></span> Downloading https<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>s3<span class=\"token punctuation\">.</span>ap<span class=\"token operator\">-</span>northeast<span class=\"token operator\">-</span><span class=\"token number\">2.</span>amazonaws<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>file<span class=\"token punctuation\">.</span>epikem<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>jaso<span class=\"token operator\">-</span>analyzer<span class=\"token operator\">-</span>plugin<span class=\"token operator\">-</span><span class=\"token number\">7.0</span><span class=\"token number\">.1</span><span class=\"token number\">.0</span><span class=\"token operator\">-</span>plugin<span class=\"token punctuation\">.</span>zip\n<span class=\"token punctuation\">[</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">===</span><span class=\"token operator\">=</span><span class=\"token punctuation\">]</span> <span class=\"token number\">100</span><span class=\"token operator\">%</span>  \n<span class=\"token operator\">-</span><span class=\"token operator\">></span> Installed jaso<span class=\"token operator\">-</span>analyzer\nAdministrator@elk<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>vm<span class=\"token punctuation\">:</span><span class=\"token operator\">~</span>$</code></pre></div>\n<p>플러그인을 다 설치했는데도 아래와 같은 에러가 뜬다. 전에도 떴었던 거 같기도 한데..</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"error\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"root_cause\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"illegal_argument_exception\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"reason\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Unknown tokenizer type [nori_tokenizer] for [nori-user-dict]\"</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"illegal_argument_exception\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"reason\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Unknown tokenizer type [nori_tokenizer] for [nori-user-dict]\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"status\"</span><span class=\"token operator\">:</span> <span class=\"token number\">400</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>오늘은 꽤 작업을 많이 했다.</p>\n<ol>\n<li>기성품이긴 하나, elk 스택을 구글 클라우드에 올림.</li>\n<li>로컬 logstash로 올린 elk에 데이터 올림.</li>\n<li>elasticsearch vm에 들어가서 jaso-analyzer를 설치함.</li>\n<li>elasticsearch vm에서 nori-analysis를 설치함.</li>\n<li>server의 elasticsearch js client 버전 6.6.0에서 7.0.1로 업그레이드함.</li>\n</ol>\n<h2 id=\"tags\"><a href=\"#tags\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>tags</h2>\n<p>  #vocabo</p>","id":"9c3d2fc5-144e-5d02-8ba8-84c7499d3146","fields":{"slug":"2019-05-13"},"frontmatter":{"date":"2019-05-13","title":"2019-05-13","category":"blog","tags":["blog"],"banner":"/assets/bg/1.jpg"},"timeToRead":3},{"excerpt":"vocabo 아직도 쿠버네티스 통신으로 씨름중 4 skaffold라는 유틸?을 찾았는데, 상당히 유용한데다 편하다! microservice예제를 보니 이해가 좀 된다. 드디어 할 수 있을 거 같다. 내일 분석해서 해보자. tags    # vocabo","html":"<h3 id=\"vocabo-아직도-쿠버네티스-통신으로-씨름중-4\"><a href=\"#vocabo-%EC%95%84%EC%A7%81%EB%8F%84-%EC%BF%A0%EB%B2%84%EB%84%A4%ED%8B%B0%EC%8A%A4-%ED%86%B5%EC%8B%A0%EC%9C%BC%EB%A1%9C-%EC%94%A8%EB%A6%84%EC%A4%91-4\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>vocabo 아직도 쿠버네티스 통신으로 씨름중 4</h3>\n<p>skaffold라는 유틸?을 찾았는데, 상당히 유용한데다 편하다! microservice예제를 보니 이해가 좀 된다. 드디어 할 수 있을 거 같다. 내일 분석해서 해보자.</p>\n<h2 id=\"tags\"><a href=\"#tags\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>tags</h2>\n<p>  #vocabo</p>","id":"64ec6b92-5eb7-5d09-9ef1-999036966efe","fields":{"slug":"2019-05-07"},"frontmatter":{"date":"2019-05-07","title":"2019-05-07","category":"blog","tags":["blog"],"banner":"/assets/bg/3.jpg"},"timeToRead":1},{"excerpt":"vocabo 아직도 쿠버네티스 통신으로 씨름중 대체 개념만 알려주고 어떻게 하는건지 예시를 봐도 그냥 http url로 하는 request가 아니라 무슨 nginx 설정같은게 나오고 그래서 계속 헤매고 있다. cluster ip가 클러스터 내에서만 가능한거고, pod가 각각 ip를 갖고있지만, 로드밸런서나 서비스 없이는 클러스터 밖과 통신 안되는거는 질리도록 알겠는데 그래서 클라이언트에서 url…","html":"<h3 id=\"vocabo-아직도-쿠버네티스-통신으로-씨름중\"><a href=\"#vocabo-%EC%95%84%EC%A7%81%EB%8F%84-%EC%BF%A0%EB%B2%84%EB%84%A4%ED%8B%B0%EC%8A%A4-%ED%86%B5%EC%8B%A0%EC%9C%BC%EB%A1%9C-%EC%94%A8%EB%A6%84%EC%A4%91\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>vocabo 아직도 쿠버네티스 통신으로 씨름중</h3>\n<p>대체 개념만 알려주고 어떻게 하는건지 예시를 봐도 그냥 http url로 하는 request가 아니라 무슨 nginx 설정같은게 나오고 그래서 계속 헤매고 있다.</p>\n<p>cluster ip가 클러스터 내에서만 가능한거고, pod가 각각 ip를 갖고있지만, 로드밸런서나 서비스 없이는 클러스터 밖과 통신 안되는거는 질리도록 알겠는데 그래서 클라이언트에서 url을 어떻게 해야 서버로 통신이 들어가느냐는 거다..</p>\n<p>겨우 서비스 이름 등에 따라 환경변수가 채워진다는 걸 보고 그대로 따라했는데 여전히 안 된다. 결국 로드밸런서 추가해서 해당 포드에 접근하는거만 되고 포드간 통신을 성공을 못 하고 있다. 환경변수 설명대로 </p>\n<blockquote>\n<p>📂 <code class=\"language-text\">server.js</code></p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">    <span class=\"token keyword\">var</span> client <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">elasticsearch<span class=\"token punctuation\">.</span>Client</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// host: process.env.ELASTICSEARCH_URL,</span>\n        host<span class=\"token punctuation\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">ELASTIC_PORT</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// log: 'trace'</span>\n        apiVersion<span class=\"token punctuation\">:</span> <span class=\"token string\">'6.6'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<p>📂 <code class=\"language-text\">client.js</code></p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> server_url <span class=\"token operator\">=</span> <span class=\"token string\">'http://SERVER_HOST/...'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이런 식으로 하면 ELASTIC_PORT 환경 변수가 채워져서 통신되지 않을까 했지만 여전히 실패했다.</p>\n<p>내가 생각하는 방식은 클라이언트만 로드밸런서를 넣어서 외부에서 접근가능하게 하고, 나머지 서버와 elastic 포드는 cluster ip만으로 통신하게 하는건데, 이게 왜 이렇게 어렵지? </p>\n<p>게다가 찾아보니 docker image 업데이트할 때, 쿠버네티스 자체 yaml 설정으로는 latest이미지에 푸쉬하는걸 감지하여 포드 업데이트하는게 지원되지 않는 모양이다.\n그래서 나는 도커 이미지를 업데이트할 때마다 콘솔에서 latest 태그를 떼었다 붙였다 하면서 수동으로 업데이트하고있다.. </p>\n<p>kube-dns라는것도 있는 모양이고 아무래도 이걸 써야하나 싶긴 한데..</p>\n<h2 id=\"tags\"><a href=\"#tags\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>tags</h2>\n<p>  #vocabo, #kubernetes</p>","id":"d666a440-084e-58ca-beb8-b1934f39798c","fields":{"slug":"2019-04-26"},"frontmatter":{"date":"2019-04-26","title":"2019-04-26","category":"blog","tags":["blog"],"banner":"/assets/bg/3.jpg"},"timeToRead":1},{"excerpt":"알고리즘 풀이 기록 깃에 올릴까? sport부분이 git 저장소로 되어있지 않은 것을 알았다. 근데 여기에 msvc 캐시 파일 등으로 용량이 커서 git 저장소로 올리려면 .gitignore 설정을 조금 많이 해야 할 것이다. python 버전 문제 알고스팟에서 파이썬 버전때문에 f string을 쓰지 못하나 했는데, 찾아보니 파이썬에도 js의 babel과 비슷한 것이 있었다. https://github.com/nvbn/py-backwards…","html":"<h3 id=\"알고리즘-풀이-기록-깃에-올릴까\"><a href=\"#%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%ED%92%80%EC%9D%B4-%EA%B8%B0%EB%A1%9D-%EA%B9%83%EC%97%90-%EC%98%AC%EB%A6%B4%EA%B9%8C\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>알고리즘 풀이 기록 깃에 올릴까?</h3>\n<p>sport부분이 git 저장소로 되어있지 않은 것을 알았다. 근데 여기에 msvc 캐시 파일 등으로 용량이 커서 git 저장소로 올리려면 .gitignore 설정을 조금 많이 해야 할 것이다.</p>\n<h3 id=\"python-버전-문제\"><a href=\"#python-%EB%B2%84%EC%A0%84-%EB%AC%B8%EC%A0%9C\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>python 버전 문제</h3>\n<p>알고스팟에서 파이썬 버전때문에 f string을 쓰지 못하나 했는데, 찾아보니 파이썬에도 js의 babel과 비슷한 것이 있었다.</p>\n<p><a href=\"https://github.com/nvbn/py-backwards\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/nvbn/py-backwards</a></p>\n<p>이걸 써서 파이썬 3.7 버전으로 코드를 짜서 3.4버전으로 트랜스파일 할 수 있다.</p>\n<p>아래는 파워셸에서 사용하기 위한 makefile 설정</p>\n<div class=\"gatsby-highlight\" data-language=\"makefile\"><pre class=\"language-makefile\"><code class=\"language-makefile\"><span class=\"token symbol\">run</span><span class=\"token punctuation\">:</span>\n\tpwsh -command <span class=\"token string\">\"Get-Content .\\input.txt | python3 .\\main.py\"</span>\n<span class=\"token symbol\">test</span><span class=\"token punctuation\">:</span>\n\tpwsh -command <span class=\"token string\">\"Get-Content .\\input.txt | python3 .\\main.py\"</span> test\n<span class=\"token symbol\">runc</span><span class=\"token punctuation\">:</span>\n\tpy-backwards -i .\\main.py -o .\\compiled.py -t 3.4\n\tpwsh -command <span class=\"token string\">\"Get-Content .\\input.txt | python3 .\\compiled.py\"</span>\n<span class=\"token symbol\">testc</span><span class=\"token punctuation\">:</span>\n\tpy-backwards -i .\\main.py -o .\\compiled.py -t 3.4\n\tpwsh -command <span class=\"token string\">\"Get-Content .\\input.txt | python3 .\\compiled.py\"</span> test</code></pre></div>","id":"24209a84-74b3-5891-bac3-d5085035db47","fields":{"slug":"2019-04-21"},"frontmatter":{"date":"2019-04-21","title":"2019-04-21","category":"blog","tags":["blog"],"banner":"/assets/bg/1.jpg"},"timeToRead":1}],"tagName":"blog"}}