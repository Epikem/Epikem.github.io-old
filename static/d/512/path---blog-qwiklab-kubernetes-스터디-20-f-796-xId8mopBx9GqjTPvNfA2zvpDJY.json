{"data":{"markdownRemark":{"html":"<p>각종 명령어를 치면서 정리하자. 또 금방 까먹는다</p>\n<p>이전에 했던 것과 비슷한 명령들은 생략.</p>\n<blockquote>\n<p>exec /bin/sh in first container of pod named \"monolith\"</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"ps\"><pre class=\"language-ps\"><code class=\"language-ps\">kubectl exec monolith --stdin --tty /bin/sh\n # is same with:\nkubectl exec monolith -it /bin/sh</code></pre></div>\n<p><code class=\"language-text\">--stdin</code> 및 <code class=\"language-text\">--tty</code>플래그는 또 뭔가 했더니, 알고보니 <code class=\"language-text\">-i</code>가 <code class=\"language-text\">--stdin</code>플래그 줄임이고, <code class=\"language-text\">-t</code>가 <code class=\"language-text\">--tty</code> 플래그의 줄임이었다. 그리고 <code class=\"language-text\">-c</code>플래그로 pod 내부의 컨테이너 중 어떤 컨테이너를 대상으로 할 지 선택할 수 있다. 아래는 <code class=\"language-text\">kubectl exec -h</code> 도움말:</p>\n<blockquote>\n<p>Options:\n-c, --container='': Container name. If omitted, the first container in the pod will be chosen</p>\n<p> -i, --stdin=false: Pass stdin to the container</p>\n<p> -t, --tty=false: Stdin is a TTY</p>\n<p>Usage:\nkubectl exec POD [-c CONTAINER] -- COMMAND [args...][options]</p>\n</blockquote>\n<p>이번 예에서는 https 트래픽을 처리할 수 있는 secure pod를 만들고, 그걸 Service로 외부 노출하여 접속해보는 것으로 보인다.</p>\n<h3 id=\"1\"><a href=\"#1\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.</h3>\n<blockquote>\n<p>create tls certificates from files:</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"ps\"><pre class=\"language-ps\"><code class=\"language-ps\">ls tls/\n # &gt; ca-key.pem  ca.pem  cert.pem  key.pem\nkubectl create secret generic tls-certs --from-file tls/\n #&gt; secret/tls-certs created</code></pre></div>\n<blockquote>\n<p>generate nginx configmap from file</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"ps\"><pre class=\"language-ps\"><code class=\"language-ps\">cat nginx/proxy.conf\n # &gt; server {\n # &gt;   listen 443;\n # &gt;   ssl    on;\n # &gt; \n # &gt;   ssl_certificate     /etc/tls/cert.pem;\n # &gt;   ssl_certificate_key /etc/tls/key.pem;\n # &gt; \n # &gt;   location / {\n # &gt;     proxy_pass http://127.0.0.1:80;\n # &gt;   }\n # &gt; }\n\nkubectl create configmap nginx-proxy-conf --from-file nginx/proxy.conf\n # &gt; configmap/nginx-proxy-conf created\n\ncat pods/secure-monolith.yaml</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\">apiVersion: v1\nkind: Pod\nmetadata:\n  name: &quot;secure-monolith&quot;\n  labels:\n    app: monolith\nspec:\n  containers:\n    - name: nginx\n      image: &quot;nginx:1.9.14&quot;\n      lifecycle:\n        preStop:\n          exec:\n            command: [&quot;/usr/sbin/nginx&quot;,&quot;-s&quot;,&quot;quit&quot;]\n      volumeMounts:\n        - name: &quot;nginx-proxy-conf&quot;\n          mountPath: &quot;/etc/nginx/conf.d&quot;\n        - name: &quot;tls-certs&quot;\n          mountPath: &quot;/etc/tls&quot;\n    - name: monolith\n      image: &quot;kelseyhightower/monolith:1.0.0&quot;\n      ports:\n        - name: http\n          containerPort: 80\n        - name: health\n          containerPort: 81\n      resources:\n        limits:\n          cpu: 0.2\n          memory: &quot;10Mi&quot;\n      livenessProbe:\n        httpGet:\n          path: /healthz\n          port: 81\n          scheme: HTTP\n        initialDelaySeconds: 5\n        periodSeconds: 15\n        timeoutSeconds: 5\n      readinessProbe:\n        httpGet:\n          path: /readiness\n          port: 81\n          scheme: HTTP\n        initialDelaySeconds: 5\n        timeoutSeconds: 1\n  volumes:\n    - name: &quot;tls-certs&quot;\n      secret:\n        secretName: &quot;tls-certs&quot;\n    - name: &quot;nginx-proxy-conf&quot;\n      configMap:\n        name: &quot;nginx-proxy-conf&quot;\n        items:\n          - key: &quot;proxy.conf&quot;\n            path: &quot;proxy.conf&quot;</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"ps\"><pre class=\"language-ps\"><code class=\"language-ps\">kubectl create -f pods/secure-monolith.yaml\n # &gt; pod/secure-monolith created</code></pre></div>\n<blockquote>\n<p>expose secure-monolith pod with kube service</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"ps\"><pre class=\"language-ps\"><code class=\"language-ps\">cat services/monolith.yaml</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\">kind: Service\napiVersion: v1\nmetadata:\n  name: &quot;monolith&quot;\nspec:\n  selector:\n    app: &quot;monolith&quot;\n    secure: &quot;enabled&quot;\n  ports:\n    - protocol: &quot;TCP&quot;\n      port: 443\n      targetPort: 443\n      nodePort: 31000\n  type: NodePort</code></pre></div>\n<blockquote>\n<p>Things to note:</p>\n<ol>\n<li>이 서비스는 selector를 통해 <code class=\"language-text\">app=monolith,secure=enabled</code>인 pod를 찾아 자동으로 노출한다.</li>\n<li>포트 31000의 외부 트래픽을 내부 포트 443의 nginx로 전달해야 하므로 여기서 nodeport를 expose해야 한다.</li>\n</ol>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"ps\"><pre class=\"language-ps\"><code class=\"language-ps\">kubectl create -f services/monolith.yaml\n # &gt; service/monolith created</code></pre></div>\n<p><code class=\"language-text\">gcloud compute firewall-rules</code> 명령으로 노출된 nodeport의 monolith service로의 트래픽을 허용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ps\"><pre class=\"language-ps\"><code class=\"language-ps\">gcloud compute firewall-rules create allow-monolith-nodeport --allow=tcp:31000\n\n #&gt; Creating firewall...done.</code></pre></div>\n<blockquote>\n<p>get an external IP address for one of the nodes.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"ps\"><pre class=\"language-ps\"><code class=\"language-ps\">gcloud compute instances list</code></pre></div>\n<blockquote>\n<p>try hitting the secure-monolith service using curl:</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">curl -k https://&lt;EXTERNAL_IP&gt;:31000</code></pre></div>\n<p>이 때, 연결이 실패하게 되는데, 예제에서 secure-monolith yaml에 <code class=\"language-text\">secure=enabled</code> 라벨을 빼놓았기 때문이다. 아래와 같이 <code class=\"language-text\">kubectl label pods</code>명령으로 label을 추가할 수 있고, label을 추가하면 서비스를 재시작하지 않고도 서비스가 알아서 갱신되며 endpoint가 생성된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"ps\"><pre class=\"language-ps\"><code class=\"language-ps\">kubectl get pods -l &quot;app=monolith,secure=enabled&quot;\n #&gt; No resources found.\nkubectl label pods secure-monolith &#39;secure-enabled&#39;\n #&gt; error: at least one label update is required\nkubectl label pods secure-monolith &#39;secure=enabled&#39;\n #&gt; pod/secure-monolith labeled\nkubectl get pods secure-monolith --show-labels\n #&gt; NAME              READY   STATUS    RESTARTS   AGE     LABELS\n #&gt; secure-monolith   2/2     Running   0          9m54s   app=monolith,secure=enabled</code></pre></div>\n<p>다시 외부 ip로 접속하면 연결이 잘 된다.</p>\n<h2 id=\"tags\"><a href=\"#tags\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>tags</h2>\n<p>  #cloud, #blog</p>","fields":{"slug":"qwiklab-kubernetes-스터디"},"frontmatter":{"title":"qwiklab kubernetes 스터디","date":"26.08.2019","category":"blog","tags":["dev/cloud","blog"],"banner":"/assets/bg/2.jpg"},"timeToRead":3}},"pageContext":{"slug":"qwiklab-kubernetes-스터디","prev":{"excerpt":"각종 명령어를 치면서 정리하자. 또 금방 까먹는다1.list active account namelist project idsetting default compute zonecreating a kubernetes engine clusterget authentication credentials for the cluster위 명령을 해야 kubeconfig entry…","html":"<p>각종 명령어를 치면서 정리하자. 또 금방 까먹는다</p>\n<h3 id=\"1\"><a href=\"#1\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.</h3>\n<blockquote>\n<p>list active account name</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"ps1\"><pre class=\"language-ps1\"><code class=\"language-ps1\">gcloud auth list</code></pre></div>\n<blockquote>\n<p>list project id</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"ps1\"><pre class=\"language-ps1\"><code class=\"language-ps1\">gcloud config list project</code></pre></div>\n<blockquote>\n<p>setting default compute zone</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"ps1\"><pre class=\"language-ps1\"><code class=\"language-ps1\">gcloud config set compute/zone &lt;us-central1-a&gt;</code></pre></div>\n<blockquote>\n<p>creating a kubernetes engine cluster</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"ps1\"><pre class=\"language-ps1\"><code class=\"language-ps1\">gcloud container clusters create &lt;cluster-name&gt;</code></pre></div>\n<blockquote>\n<p>get authentication credentials for the cluster</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"ps1\"><pre class=\"language-ps1\"><code class=\"language-ps1\">gcloud container clusters get-credentials &lt;cluster-name&gt;</code></pre></div>\n<p>위 명령을 해야 kubeconfig entry가 생성된다는거 같다. 기본 인증서 등등이 없어진다는 말이 이걸 말하는 듯? </p>\n<blockquote>\n<p>deploying and application to the cluster</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"ps1\"><pre class=\"language-ps1\"><code class=\"language-ps1\">kubectl run hello-server --image=gcr.io/google-samples/hello-app:1.0 --port 8080</code></pre></div>\n<blockquote>\n<p>expose kube resource with kubernetes service</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"ps1\"><pre class=\"language-ps1\"><code class=\"language-ps1\">kubectl expose deployment hello-server --type=&quot;LoadBalancer&quot;</code></pre></div>\n<blockquote>\n<p>cleanup cluster</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"ps1\"><pre class=\"language-ps1\"><code class=\"language-ps1\">gcloud container clusters delete &lt;cluster-name&gt;</code></pre></div>\n<h3 id=\"2-orchestrating-the-clous-with-kubernetes\"><a href=\"#2-orchestrating-the-clous-with-kubernetes\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. orchestrating the clous with kubernetes</h3>\n<p>In this lab you will learn how to:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Provision a complete Kubernetes cluster using Kubernetes Engine.\nDeploy and manage Docker containers using kubectl.\nBreak an application into microservices using Kubernetes&#39; Deployments and Services.</code></pre></div>\n<h2 id=\"tags\"><a href=\"#tags\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>tags</h2>\n<p>  #meta, #blog</p>","id":"788a55b3-3f51-5e9d-8c73-98be0bba5105","fields":{"slug":"kubernetes-qwiklab-hands-on-스터디-2"},"frontmatter":{"date":"2019-08-23","title":"kubernetes qwiklab hands on 스터디 2","category":"blog","tags":["meta","blog"],"banner":"/assets/bg/3.jpg"},"timeToRead":1},"next":{"excerpt":"백준 16137 - 견우와 직녀https://www.acmicpc.net/problem/16137다리를 연속해서 건너서는 안 된다는 조건 때문에 여러 번 틀림. 다 풀었다고 생각되더라도 다시한번 모든 조건을 구현했는지 확인해야겠다. 아니면 처음부터 다양한 조건들을 나타내는 테스트 케이스들을 하나씩 만들어 보는게 좋을수도. bfs로는 구현하기 까다롭다고 생각했는데 (주기 다리 건너기 때문에) 검색해보니 bfs…","html":"<h3 id=\"백준-16137---견우와-직녀\"><a href=\"#%EB%B0%B1%EC%A4%80-16137---%EA%B2%AC%EC%9A%B0%EC%99%80-%EC%A7%81%EB%85%80\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>백준 16137 - 견우와 직녀</h3>\n<p><a href=\"https://www.acmicpc.net/problem/16137\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.acmicpc.net/problem/16137</a></p>\n<p>다리를 연속해서 건너서는 안 된다는 조건 때문에 여러 번 틀림. 다 풀었다고 생각되더라도 다시한번 모든 조건을 구현했는지 확인해야겠다. 아니면 처음부터 다양한 조건들을 나타내는 테스트 케이스들을 하나씩 만들어 보는게 좋을수도. </p>\n<p>bfs로는 구현하기 까다롭다고 생각했는데 (주기 다리 건너기 때문에) 검색해보니 bfs로 구현한 사람이 있었다. 다리 사용의 유무 때문에도 bfs로 구현하기 어렵다고 생각했지만 bfs로 구현한 코드가 있다. 그 경우 이전 정보에 대해 필요한 유일한 정보인 이전 위치가 절벽이었는지에 대한 정보를 탐색할 때 얻기 위해, 현재 상태 정보에 현재 위치가 절벽인지에 대한 여부를 상태 정보에 넣는다. 또, 탐색 거리를 건너뛰는 문제에 대한 점은 bfs에서도 visited여부만으로 갱신하는 게 아니라, cost를 더 줄일 수 있으면 탐색함으로써 구현 가능하다.</p>\n<h2 id=\"tags\"><a href=\"#tags\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>tags</h2>\n<p>  #sport, #blog</p>","id":"4412220d-2f53-5dbc-a04d-092dded43336","fields":{"slug":"백준-문제-풀이"},"frontmatter":{"date":"2019-08-26","title":"백준 문제 풀이","category":"sport","tags":["dev/sport","blog"],"banner":"/assets/bg/2.jpg"},"timeToRead":1}}}