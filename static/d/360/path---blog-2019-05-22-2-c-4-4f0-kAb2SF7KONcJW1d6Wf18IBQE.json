{"data":{"markdownRemark":{"html":"<h3 id=\"docker-for-aws-swarm으로-aws-배포-성공\"><a href=\"#docker-for-aws-swarm%EC%9C%BC%EB%A1%9C-aws-%EB%B0%B0%ED%8F%AC-%EC%84%B1%EA%B3%B5\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>docker for aws (swarm)으로 aws 배포 성공</h3>\n<p>그놈의 invalid host header 문제를 드디어 해결했다. 원하던 방식으로 한 건 아니고 그냥 빌드해서 <code class=\"language-text\">yarn global add serve</code>로 <code class=\"language-text\">serve</code>를 설치하고 <code class=\"language-text\">serve -s build -l 3000</code>으로 응답하게 했는데, 또 계속 안되다가 이상하게 그냥 <code class=\"language-text\">serve -s build</code>로는 5000포트에서 성공하길래 왜인가 했더니 <code class=\"language-text\">docker-compose.yml</code>에 필요없는 <code class=\"language-text\">expose: 3000</code> 옵션 때문이었다. 지우고 다시 <code class=\"language-text\">command: serve -s build -l 3000</code>으로 돌리자 드디어 클라이언트 앱이 떴다. 다만 서버에 연결 및 서버 자체로 elasticsearch service와는 연결이 안되었는데, 하도 스택 생성/삭제를 반복했더니 ec2 사용 시간 요금은 다 쓰지도 않았는데 벌써 ec2 ebs io 프리 티어 제한을 넘어 요금이 2만원을 넘어버려서 그냥 다 지워버렸다. vocabo-cluster의 vpc와 elasticsearch의 vpc를 연결하려 해봤는데, 문서를 찾아보니 한 vpc 내에서 퍼블릭/프라이빗 서브넷 생성이 가능하다고 되있어서 그렇게 하는 식으로 바꿔야할 거 같다.</p>\n<p>어쨌든 dev/prod 파이프라인을 짜보고 싶은데 지금 방식은 prod쪽이다..</p>\n<h2 id=\"tags\"><a href=\"#tags\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>tags</h2>\n<p>  #vocabo, #aws, </p>","fields":{"slug":"2019-05-22"},"frontmatter":{"title":"2019-05-22","date":"22.05.2019","category":"blog","tags":["blog"],"banner":"/assets/bg/3.jpg"},"timeToRead":1}},"pageContext":{"slug":"2019-05-22","prev":{"excerpt":"aws eks에 쿠버네티스 배포해보려 했으나 실패iam에서 역할 만들고 도 설치했는데도 로그인이 도저히 안 된다. 설명을 보니까 아마 클러스터를 만든 vocabo-cluster-admin으로 명령을 줘야 하는데, aws 로그인은 그냥 admin으로 되어있는게 원인일거 같은데, 그러면 뭐 할 때마다 로그인/로그아웃 해야하는건 아닐테고, 어떻게 설정을 해야하는건지.. \n또 찾아보니 무슨 역할 부여 권한? assumeRole…","html":"<h3 id=\"aws-eks에-쿠버네티스-배포해보려-했으나-실패\"><a href=\"#aws-eks%EC%97%90-%EC%BF%A0%EB%B2%84%EB%84%A4%ED%8B%B0%EC%8A%A4-%EB%B0%B0%ED%8F%AC%ED%95%B4%EB%B3%B4%EB%A0%A4-%ED%96%88%EC%9C%BC%EB%82%98-%EC%8B%A4%ED%8C%A8\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>aws eks에 쿠버네티스 배포해보려 했으나 실패</h3>\n<p>iam에서 역할 만들고 <code class=\"language-text\">aws-iam-authenticator</code>도 설치했는데도 로그인이 도저히 안 된다. 설명을 보니까 아마 클러스터를 만든 vocabo-cluster-admin으로 명령을 줘야 하는데, aws 로그인은 그냥 admin으로 되어있는게 원인일거 같은데, 그러면 뭐 할 때마다 로그인/로그아웃 해야하는건 아닐테고, 어떻게 설정을 해야하는건지..\n또 찾아보니 무슨 역할 부여 권한? assumeRole?관련 설정이 필요한 거 같은데 루트 관리자 계정에는 그걸 설정 못한다는거 같기도 하고..</p>\n<p>유투브 영상으로 튜토리얼을 보는게 낫겠다.</p>\n<h2 id=\"tags\"><a href=\"#tags\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>tags</h2>\n<p>  #vocabo, #aws, </p>\n<!-- # TIL\n\n## tags\n  \\#powershell, \\#windows -->","id":"c21ee52d-8610-5bcb-87d0-a0e73f6e33b2","fields":{"slug":"2019-05-20"},"frontmatter":{"date":"2019-05-20","title":"2019-05-20","category":"blog","tags":["blog"],"banner":"/assets/bg/3.jpg"},"timeToRead":1},"next":{"excerpt":"gh-pages로 블로그 올림.분명히 master 브랜치를 다 지웠는데도 계속  라는 에러가 떠서 왜그런가 했더니,  노드 모듈의 캐시에 저장되있어서였다. https://github.com/transitive-bullshit/react-modern-library-boilerplate/issues/15 여기에 나온대로 의 캐시를 지웠더니 잘 된다.tags  #blog, #github-pages","html":"<h3 id=\"gh-pages로-블로그-올림\"><a href=\"#gh-pages%EB%A1%9C-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EC%98%AC%EB%A6%BC\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>gh-pages로 블로그 올림.</h3>\n<p>분명히 master 브랜치를 다 지웠는데도 계속 <code class=\"language-text\">A branch named &#39;master&#39; already exists.</code> 라는 에러가 떠서 왜그런가 했더니, <code class=\"language-text\">gh-pages</code> 노드 모듈의 캐시에 저장되있어서였다. </p>\n<p><a href=\"https://github.com/transitive-bullshit/react-modern-library-boilerplate/issues/15\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/transitive-bullshit/react-modern-library-boilerplate/issues/15</a> 여기에 나온대로 <code class=\"language-text\">gh-pages</code>의 캐시를 지웠더니 잘 된다.</p>\n<h2 id=\"tags\"><a href=\"#tags\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>tags</h2>\n<p>  #blog, #github-pages</p>","id":"5e1d4d13-8b61-5c9f-a983-5b4e303c89e3","fields":{"slug":"2019-05-24"},"frontmatter":{"date":"2019-05-24","title":"2019-05-24","category":"blog","tags":["blog"],"banner":"/assets/bg/4.jpg"},"timeToRead":1}}}