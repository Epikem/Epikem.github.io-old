{"data":{"markdownRemark":{"html":"<h3 id=\"알고리즘-풀이-기록-깃에-올릴까\"><a href=\"#%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%ED%92%80%EC%9D%B4-%EA%B8%B0%EB%A1%9D-%EA%B9%83%EC%97%90-%EC%98%AC%EB%A6%B4%EA%B9%8C\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>알고리즘 풀이 기록 깃에 올릴까?</h3>\n<p>sport부분이 git 저장소로 되어있지 않은 것을 알았다. 근데 여기에 msvc 캐시 파일 등으로 용량이 커서 git 저장소로 올리려면 .gitignore 설정을 조금 많이 해야 할 것이다.</p>\n<h3 id=\"python-버전-문제\"><a href=\"#python-%EB%B2%84%EC%A0%84-%EB%AC%B8%EC%A0%9C\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>python 버전 문제</h3>\n<p>알고스팟에서 파이썬 버전때문에 f string을 쓰지 못하나 했는데, 찾아보니 파이썬에도 js의 babel과 비슷한 것이 있었다.</p>\n<p><a href=\"https://github.com/nvbn/py-backwards\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/nvbn/py-backwards</a></p>\n<p>이걸 써서 파이썬 3.7 버전으로 코드를 짜서 3.4버전으로 트랜스파일 할 수 있다.</p>\n<p>아래는 파워셸에서 사용하기 위한 makefile 설정</p>\n<div class=\"gatsby-highlight\" data-language=\"makefile\"><pre class=\"language-makefile\"><code class=\"language-makefile\"><span class=\"token symbol\">run</span><span class=\"token punctuation\">:</span>\n\tpwsh -command <span class=\"token string\">\"Get-Content .\\input.txt | python3 .\\main.py\"</span>\n<span class=\"token symbol\">test</span><span class=\"token punctuation\">:</span>\n\tpwsh -command <span class=\"token string\">\"Get-Content .\\input.txt | python3 .\\main.py\"</span> test\n<span class=\"token symbol\">runc</span><span class=\"token punctuation\">:</span>\n\tpy-backwards -i .\\main.py -o .\\compiled.py -t 3.4\n\tpwsh -command <span class=\"token string\">\"Get-Content .\\input.txt | python3 .\\compiled.py\"</span>\n<span class=\"token symbol\">testc</span><span class=\"token punctuation\">:</span>\n\tpy-backwards -i .\\main.py -o .\\compiled.py -t 3.4\n\tpwsh -command <span class=\"token string\">\"Get-Content .\\input.txt | python3 .\\compiled.py\"</span> test</code></pre></div>","fields":{"slug":"2019-04-21"},"frontmatter":{"title":"2019-04-21","date":"21.04.2019","category":"blog","tags":["blog"],"banner":"/assets/bg/1.jpg"},"timeToRead":1}},"pageContext":{"slug":"2019-04-21","prev":{"excerpt":"알고리즘 공부 algospot 와일드카드 - WILDCARD tags algospot 와일드카드 - WILDCARD https://algospot.com/judge/problem/read/WILDCARD 처음에는 시그니쳐를   이렇게 했다가 성가셔서 w,t 문자열 매개변수를 밖으로 뺐다.  의 매치 조건을 어떻게 해야 하는지 좀 헷갈려서 한 번 오답이 났다. 두가지 경우라고 생각했는데 0문자 이상이므로 다음과 같이 3가지 or 조건이다.…","html":"<p>알고리즘 공부</p>\n<hr>\n<ol>\n<li>\n<p><a href=\"#algospot\">algospot</a></p>\n<ol>\n<li><a href=\"#%EC%99%80%EC%9D%BC%EB%93%9C%EC%B9%B4%EB%93%9C---wildcard\">와일드카드 - WILDCARD</a></li>\n</ol>\n</li>\n<li><a href=\"#tags\">tags</a></li>\n</ol>\n<h2 id=\"algospot\"><a href=\"#algospot\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>algospot</h2>\n<h3 id=\"와일드카드---wildcard\"><a href=\"#%EC%99%80%EC%9D%BC%EB%93%9C%EC%B9%B4%EB%93%9C---wildcard\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>와일드카드 - WILDCARD</h3>\n<p><a href=\"https://algospot.com/judge/problem/read/WILDCARD\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://algospot.com/judge/problem/read/WILDCARD</a></p>\n<p>처음에는 시그니쳐를 <code class=\"language-text\">match(w,t,ia,ib)</code> 이렇게 했다가 성가셔서 w,t 문자열 매개변수를 밖으로 뺐다. <code class=\"language-text\">*</code>의 매치 조건을 어떻게 해야 하는지 좀 헷갈려서 한 번 오답이 났다. 두가지 경우라고 생각했는데 0문자 이상이므로 다음과 같이 3가지 or 조건이다. 0문자 매치하고 나가는 경우를 생각 안 해버렸다. 그리고 중간에 메모이제이션을 했더니 다 true가 되버리는 문제가 있었는데, 캐시 초기화를 안해서였다.\n매 번 캐시 접근할 때 인덱싱으로 하기 귀찮은데, cpp의 참조자 같은 건 없을까?\n함수로 만들면 좀더 편할지도?</p>\n<ul>\n<li>1문자 매치하고 나가기 (ia+1,ib+1)</li>\n<li>1문자 매치하고 ia는 홀딩 (ia, ib+1)</li>\n<li>0문자 매치하고 나가기 (ia+1, ib)</li>\n</ul>\n<h2 id=\"tags\"><a href=\"#tags\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>tags</h2>\n<p>  #algorithm, #algospot, #python</p>","id":"d32dc12a-6574-5435-82e9-903da98acf2c","fields":{"slug":"sport"},"frontmatter":{"date":"2019-04-21","title":"sport","category":"sport","tags":["dev/sport"],"banner":"/assets/bg/4.jpg"},"timeToRead":1},"next":{"excerpt":"vocabo 아직도 쿠버네티스 통신으로 씨름중 대체 개념만 알려주고 어떻게 하는건지 예시를 봐도 그냥 http url로 하는 request가 아니라 무슨 nginx 설정같은게 나오고 그래서 계속 헤매고 있다. cluster ip가 클러스터 내에서만 가능한거고, pod가 각각 ip를 갖고있지만, 로드밸런서나 서비스 없이는 클러스터 밖과 통신 안되는거는 질리도록 알겠는데 그래서 클라이언트에서 url…","html":"<h3 id=\"vocabo-아직도-쿠버네티스-통신으로-씨름중\"><a href=\"#vocabo-%EC%95%84%EC%A7%81%EB%8F%84-%EC%BF%A0%EB%B2%84%EB%84%A4%ED%8B%B0%EC%8A%A4-%ED%86%B5%EC%8B%A0%EC%9C%BC%EB%A1%9C-%EC%94%A8%EB%A6%84%EC%A4%91\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>vocabo 아직도 쿠버네티스 통신으로 씨름중</h3>\n<p>대체 개념만 알려주고 어떻게 하는건지 예시를 봐도 그냥 http url로 하는 request가 아니라 무슨 nginx 설정같은게 나오고 그래서 계속 헤매고 있다.</p>\n<p>cluster ip가 클러스터 내에서만 가능한거고, pod가 각각 ip를 갖고있지만, 로드밸런서나 서비스 없이는 클러스터 밖과 통신 안되는거는 질리도록 알겠는데 그래서 클라이언트에서 url을 어떻게 해야 서버로 통신이 들어가느냐는 거다..</p>\n<p>겨우 서비스 이름 등에 따라 환경변수가 채워진다는 걸 보고 그대로 따라했는데 여전히 안 된다. 결국 로드밸런서 추가해서 해당 포드에 접근하는거만 되고 포드간 통신을 성공을 못 하고 있다. 환경변수 설명대로 </p>\n<blockquote>\n<p>📂 <code class=\"language-text\">server.js</code></p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">    <span class=\"token keyword\">var</span> client <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">elasticsearch<span class=\"token punctuation\">.</span>Client</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// host: process.env.ELASTICSEARCH_URL,</span>\n        host<span class=\"token punctuation\">:</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">ELASTIC_PORT</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// log: 'trace'</span>\n        apiVersion<span class=\"token punctuation\">:</span> <span class=\"token string\">'6.6'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<p>📂 <code class=\"language-text\">client.js</code></p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> server_url <span class=\"token operator\">=</span> <span class=\"token string\">'http://SERVER_HOST/...'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이런 식으로 하면 ELASTIC_PORT 환경 변수가 채워져서 통신되지 않을까 했지만 여전히 실패했다.</p>\n<p>내가 생각하는 방식은 클라이언트만 로드밸런서를 넣어서 외부에서 접근가능하게 하고, 나머지 서버와 elastic 포드는 cluster ip만으로 통신하게 하는건데, 이게 왜 이렇게 어렵지? </p>\n<p>게다가 찾아보니 docker image 업데이트할 때, 쿠버네티스 자체 yaml 설정으로는 latest이미지에 푸쉬하는걸 감지하여 포드 업데이트하는게 지원되지 않는 모양이다.\n그래서 나는 도커 이미지를 업데이트할 때마다 콘솔에서 latest 태그를 떼었다 붙였다 하면서 수동으로 업데이트하고있다.. </p>\n<p>kube-dns라는것도 있는 모양이고 아무래도 이걸 써야하나 싶긴 한데..</p>\n<h2 id=\"tags\"><a href=\"#tags\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>tags</h2>\n<p>  #vocabo, #kubernetes</p>","id":"d666a440-084e-58ca-beb8-b1934f39798c","fields":{"slug":"2019-04-26"},"frontmatter":{"date":"2019-04-26","title":"2019-04-26","category":"blog","tags":["blog"],"banner":"/assets/bg/3.jpg"},"timeToRead":1}}}