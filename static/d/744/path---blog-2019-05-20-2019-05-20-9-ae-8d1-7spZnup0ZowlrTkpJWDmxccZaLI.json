{"data":{"markdownRemark":null},"pageContext":{"slug":"2019-05-202019-05-20","prev":{"excerpt":"파워셸 grep cut?s3 버킷중에 안 쓰는 codestar 버킷이 남아있는게 있었는데, 로 하면 필요없는 정보까지 포함되어서 어떻게 제거하지 하다 , 같은 기능을 파워셸에서도 할 수 있을까 하고 찾아봤는데 은 과 비슷한데 cut은 딱히 못찾고 유저가 만든 스크립트를 썼다.tags  #powershell, #windows","html":"<h2 id=\"파워셸-grep-cut\"><a href=\"#%ED%8C%8C%EC%9B%8C%EC%85%B8-grep-cut\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파워셸 grep cut?</h2>\n<p>s3 버킷중에 안 쓰는 codestar 버킷이 남아있는게 있었는데, <code class=\"language-text\">aws s3 ls</code>로 하면 필요없는 정보까지 포함되어서 어떻게 제거하지 하다 <code class=\"language-text\">grep</code>, <code class=\"language-text\">cut</code>같은 기능을 파워셸에서도 할 수 있을까 하고 찾아봤는데 <code class=\"language-text\">grep</code>은 <code class=\"language-text\">Select-String</code>과 비슷한데 cut은 딱히 못찾고 유저가 만든 스크립트를 썼다.</p>\n<h2 id=\"tags\"><a href=\"#tags\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>tags</h2>\n<p>  #powershell, #windows</p>","id":"02f35ea9-4c45-5c7b-88e4-a15076cb300b","fields":{"slug":"til"},"frontmatter":{"date":"2019-05-17","title":"TIL","category":"TIL","tags":["dev/til"],"banner":"/assets/bg/1.jpg"},"timeToRead":1},"next":{"excerpt":"docker for aws (swarm)으로 aws 배포 성공그놈의 invalid host header 문제를 드디어 해결했다. 원하던 방식으로 한 건 아니고 그냥 빌드해서 로 를 설치하고 으로 응답하게 했는데, 또 계속 안되다가 이상하게 그냥 로는 5000포트에서 성공하길래 왜인가 했더니 에 필요없는  옵션 때문이었다. 지우고 다시 으로 돌리자 드디어 클라이언트 앱이 떴다. 다만 서버에 연결 및 서버 자체로 elasticsearch…","html":"<h3 id=\"docker-for-aws-swarm으로-aws-배포-성공\"><a href=\"#docker-for-aws-swarm%EC%9C%BC%EB%A1%9C-aws-%EB%B0%B0%ED%8F%AC-%EC%84%B1%EA%B3%B5\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>docker for aws (swarm)으로 aws 배포 성공</h3>\n<p>그놈의 invalid host header 문제를 드디어 해결했다. 원하던 방식으로 한 건 아니고 그냥 빌드해서 <code class=\"language-text\">yarn global add serve</code>로 <code class=\"language-text\">serve</code>를 설치하고 <code class=\"language-text\">serve -s build -l 3000</code>으로 응답하게 했는데, 또 계속 안되다가 이상하게 그냥 <code class=\"language-text\">serve -s build</code>로는 5000포트에서 성공하길래 왜인가 했더니 <code class=\"language-text\">docker-compose.yml</code>에 필요없는 <code class=\"language-text\">expose: 3000</code> 옵션 때문이었다. 지우고 다시 <code class=\"language-text\">command: serve -s build -l 3000</code>으로 돌리자 드디어 클라이언트 앱이 떴다. 다만 서버에 연결 및 서버 자체로 elasticsearch service와는 연결이 안되었는데, 하도 스택 생성/삭제를 반복했더니 ec2 사용 시간 요금은 다 쓰지도 않았는데 벌써 ec2 ebs io 프리 티어 제한을 넘어 요금이 2만원을 넘어버려서 그냥 다 지워버렸다. vocabo-cluster의 vpc와 elasticsearch의 vpc를 연결하려 해봤는데, 문서를 찾아보니 한 vpc 내에서 퍼블릭/프라이빗 서브넷 생성이 가능하다고 되있어서 그렇게 하는 식으로 바꿔야할 거 같다.</p>\n<p>어쨌든 dev/prod 파이프라인을 짜보고 싶은데 지금 방식은 prod쪽이다..</p>\n<h2 id=\"tags\"><a href=\"#tags\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>tags</h2>\n<p>  #vocabo, #aws, </p>","id":"8336491f-002f-5dbe-b15b-ca0c4028ad63","fields":{"slug":"2019-05-22"},"frontmatter":{"date":"2019-05-22","title":"2019-05-22","category":"blog","tags":["blog"],"banner":"/assets/bg/3.jpg"},"timeToRead":1}}}